
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СформироватьДвижения(); 
	РассчитатьОклад(); 
	РасчитатьОтпуск();		
	РассчитатьПремию();
	ЗаписьВРегистрВзаиморасчетыССотрудниками()
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвижения() 
	
	СформироватьДвиженияПоОкладу(); 
	СформироватьДвиженияПрочиеПоОсновнымНачислениям();	
	СформироватьДвиженияДополнительныеНачисления(); 
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_ДополнительныеНачисления.Записать();
	
КонецПроцедуры

Процедура СформироватьДвиженияПоОкладу() 
		
	Отбор = Новый Структура;
	Отбор.Вставить("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	СтрокиОклада = Начисления.НайтиСтроки(Отбор);
	
	Если СтрокиОклада.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МинДатаНачала = СтрокиОклада[0].ДатаНачала;
	МаксДатаОкончания = СтрокиОклада[0].ДатаОкончания;
	
	Для Сч = 1 по СтрокиОклада.Количество()-1 Цикл
		
		Если МинДатаНачала > СтрокиОклада[Сч].ДатаНачала Тогда
			МинДатаНачала = СтрокиОклада[Сч].ДатаНачала;
		КонецЕсли;
		
		Если МаксДатаОкончания < СтрокиОклада[Сч].ДатаОкончания Тогда
			МаксДатаОкончания = СтрокиОклада[Сч].ДатаОкончания;
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_НачислениеЗарплатыНачисления.Сотрудник,
		|	ВКМ_НачислениеЗарплатыНачисления.ДатаНачала,
		|	ВКМ_НачислениеЗарплатыНачисления.ДатаОкончания,
		|	ВКМ_НачислениеЗарплатыНачисления.ВидРасчета,
		|	ВКМ_НачислениеЗарплатыНачисления.ГрафикРаботы
		|ПОМЕСТИТЬ ВТ_ПериодыОкладаИсходные
		|ИЗ
		|	Документ.ВКМ_НачислениеЗарплаты.Начисления КАК ВКМ_НачислениеЗарплатыНачисления
		|ГДЕ
		|	ВКМ_НачислениеЗарплатыНачисления.Ссылка = &Ссылка
		|	И ВКМ_НачислениеЗарплатыНачисления.ВидРасчета = &Оклад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Период,
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник,
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад
		|ПОМЕСТИТЬ ВТ_ИзмененияОклада
		|ИЗ
		|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&МинимальнаяДатаНачала, Сотрудник В
		|		(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ВТ_ПериодыОкладаИсходные.Сотрудник КАК Сотрудник
		|		ИЗ
		|			ВТ_ПериодыОкладаИсходные КАК ВТ_ПериодыОкладаИсходные)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВКМ_УсловияОплатыСотрудников.Период,
		|	ВКМ_УсловияОплатыСотрудников.Сотрудник,
		|	ВКМ_УсловияОплатыСотрудников.Оклад
		|ИЗ
		|	РегистрСведений.ВКМ_УсловияОплатыСотрудников КАК ВКМ_УсловияОплатыСотрудников
		|ГДЕ
		|	ВКМ_УсловияОплатыСотрудников.Период > &МинимальнаяДатаНачала
		|	И ВКМ_УсловияОплатыСотрудников.Период <= &МаксимальнаяДатаОкончания
		|	И ВКМ_УсловияОплатыСотрудников.Сотрудник В
		|		(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ВТ_ПериодыОкладаИсходные.Сотрудник КАК Сотрудник
		|		ИЗ
		|			ВТ_ПериодыОкладаИсходные КАК ВТ_ПериодыОкладаИсходные)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДатаНачала.Сотрудник,
		|	ДатаНачала.Оклад КАК Оклад,
		|	ДатаНачала.Период КАК ДатаНачала,
		|	МИНИМУМ(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(ДатаОкончания.Период, секунда, -1), ДАТАВРЕМЯ(3999, 12, 31))) КАК ДатаОкончания
		|ПОМЕСТИТЬ ВТ_ИнтервалыОклада
		|ИЗ
		|	ВТ_ИзмененияОклада КАК ДатаНачала
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИзмененияОклада КАК ДатаОкончания
		|		ПО ДатаНачала.Сотрудник = ДатаОкончания.Сотрудник
		|		И ДатаНачала.Период < ДатаОкончания.Период
		|СГРУППИРОВАТЬ ПО
		|	ДатаНачала.Сотрудник,
		|	ДатаНачала.Период,
		|	ДатаНачала.Оклад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПериодыОкладаИсходные.Сотрудник,
		|	ВТ_ПериодыОкладаИсходные.ВидРасчета,
		|	ВТ_ПериодыОкладаИсходные.ГрафикРаботы,
		|	ВТ_ИнтервалыОклада.Оклад КАК Показатель,
		|	ВЫБОР
		|		КОГДА ВТ_ИнтервалыОклада.ДатаНачала > ВТ_ПериодыОкладаИсходные.ДатаНачала
		|			ТОГДА ВТ_ИнтервалыОклада.ДатаНачала
		|		ИНАЧЕ ВТ_ПериодыОкладаИсходные.ДатаНачала
		|	КОНЕЦ КАК ПериодДействияНачало,
		|	ВЫБОР
		|		КОГДА ВТ_ИнтервалыОклада.ДатаОкончания < ВТ_ПериодыОкладаИсходные.ДатаОкончания
		|			ТОГДА ВТ_ИнтервалыОклада.ДатаОкончания
		|		ИНАЧЕ ВТ_ПериодыОкладаИсходные.ДатаОкончания
		|	КОНЕЦ КАК ПериодДействияКонец
		|ИЗ
		|	ВТ_ПериодыОкладаИсходные КАК ВТ_ПериодыОкладаИсходные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ИнтервалыОклада КАК ВТ_ИнтервалыОклада
		|		ПО ВТ_ПериодыОкладаИсходные.Сотрудник = ВТ_ИнтервалыОклада.Сотрудник
		|		И ВТ_ИнтервалыОклада.ДатаНачала <= ВТ_ПериодыОкладаИсходные.ДатаОкончания
		|		И ВТ_ПериодыОкладаИсходные.ДатаНачала <= ВТ_ИнтервалыОклада.ДатаОкончания";
	
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("МинимальнаяДатаНачала", МинДатаНачала);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МаксимальнаяДатаОкончания", МаксДатаОкончания);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить(); 
		ЗаполнитьЗначенияСвойств(Движение, ВыборкаДетальныеЗаписи); 
		Движение.ПериодРегистрации = Дата;
	КонецЦикла;

КонецПроцедуры

Процедура СформироватьДвиженияПрочиеПоОсновнымНачислениям() 
	
	Для Каждого ТекСтрокаНачисления Из Начисления Цикл
		
		Если ТипЗнч(ТекСтрокаНачисления.ВидРасчета) <> Тип("ПланВидовРасчетаСсылка.ВКМ_ОсновныеНачисления") Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТекСтрокаНачисления.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад Тогда
			Продолжить;
		КонецЕсли; 
		
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.ВидРасчета = ТекСтрокаНачисления.ВидРасчета;
		Движение.ПериодДействияНачало = ТекСтрокаНачисления.ДатаНачала;
		Движение.ПериодДействияКонец = ТекСтрокаНачисления.ДатаОкончания;
		Движение.ПериодРегистрации = Дата; 
		Движение.Сотрудник = ТекСтрокаНачисления.Сотрудник;
		Движение.ГрафикРаботы = ТекСтрокаНачисления.ГрафикРаботы;
		
		Если ТекСтрокаНачисления.ВидРасчета =  ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда
			Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(ТекСтрокаНачисления.ДатаНачала, -12));
			Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(ТекСтрокаНачисления.ДатаОкончания, -1));
		КонецЕсли; 
		
	КонецЦикла;

КонецПроцедуры

Процедура СформироватьДвиженияДополнительныеНачисления() 
		
	Для Каждого ТекСтрокаНачисления Из Начисления Цикл
		
		Если ТипЗнч(ТекСтрокаНачисления.ВидРасчета) <> Тип("ПланВидовРасчетаСсылка.ВКМ_ДополнительныеНачисления") Тогда
			Продолжить;
		КонецЕсли;
		
		Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
		Движение.ВидРасчета = ТекСтрокаНачисления.ВидРасчета;
		Движение.ПериодРегистрации = Дата;
		Движение.Сотрудник = ТекСтрокаНачисления.Сотрудник;
		
	КонецЦикла;

КонецПроцедуры

Процедура РассчитатьОклад() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Факт,
	|	ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия КАК Норма,
	|	ОсновныеНачисленияДанныеГрафика.Сотрудник
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(ВидРасчета = &Оклад
	|	И Регистратор = &Ссылка) КАК ОсновныеНачисленияДанныеГрафика";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1]; 
		ОплатаПоОкладу = Движение.Показатель * ВыборкаДетальныеЗаписи.Факт / ВыборкаДетальныеЗаписи.Норма;
		Движение.Результат = ОплатаПоОкладу;
		Движение.ОтработаноДней = ВыборкаДетальныеЗаписи.Факт;	
			
		// Удержание налога
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.Налог;
		Движение.ПериодРегистрации = Дата;
		Движение.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		Движение.Результат = ОплатаПоОкладу * 0.13;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);	
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры

Процедура РасчитатьОтпуск() 	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(БазаВКМ_ДополнительныеНачисления.РезультатБаза, 0) КАК БазаДоп,
	|	ЕСТЬNULL(БазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК БазаОсн,
	|	ЕСТЬNULL(БазаВКМ_ОсновныеНачисления.ОтработаноДнейБаза, 0) КАК БазаОтработано,
	|	ЕСТЬNULL(ДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Факт,
	|	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(
	|				&Измерения,
	|				&Измерения,
	|				,
	|				Регистратор = &Ссылка
	|					И ВидРасчета = &Отпуск) КАК БазаВКМ_ОсновныеНачисления
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = БазаВКМ_ОсновныеНачисления.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(
	|				&Измерения,
	|				&Измерения,
	|				,
	|				Регистратор = &Ссылка
	|					И ВидРасчета = &Отпуск) КАК БазаВКМ_ДополнительныеНачисления
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = БазаВКМ_ДополнительныеНачисления.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
	|				Регистратор = &Ссылка
	|					И ВидРасчета = &Отпуск) КАК ДанныеГрафика
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ДанныеГрафика.НомерСтроки
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
	|	И ВКМ_ОсновныеНачисления.ВидРасчета = &Отпуск";
	
	Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1]; 		
		Движение.ОтработаноДней = ВыборкаДетальныеЗаписи.Факт;
		
		Если ВыборкаДетальныеЗаписи.БазаОтработано = 0 Тогда
			Движение.Результат = 0;		
			Продолжить;
		КонецЕсли;
		
		ОплатаОтпуска = (ВыборкаДетальныеЗаписи.БазаОсн + ВыборкаДетальныеЗаписи.БазаДоп) * 
								ВыборкаДетальныеЗаписи.Факт / ВыборкаДетальныеЗаписи.БазаОтработано;
		Движение.Результат = ОплатаОтпуска;
																
		// Удержание налога
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.Налог;
		Движение.ПериодРегистрации = Дата;
		Движение.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		Движение.Результат = ОплатаОтпуска * 0.13;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	Движения.ВКМ_Удержания.Записать();

КонецПроцедуры

Процедура РассчитатьПремию()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ДополнительныеНачисления.НомерСтроки,
		|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот,
		|	ВКМ_ДополнительныеНачисления.Сотрудник
		|ИЗ
		|	РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&ДатаНачала, &ДатаОкончания,, Сотрудник В
		|		(ВЫБРАТЬ
		|			ВКМ_НачислениеЗарплатыНачисления.Сотрудник
		|		ИЗ
		|			Документ.ВКМ_НачислениеЗарплаты.Начисления КАК ВКМ_НачислениеЗарплатыНачисления
		|		ГДЕ
		|			ВКМ_НачислениеЗарплатыНачисления.Ссылка = &Ссылка
		|			И ВКМ_НачислениеЗарплатыНачисления.ВидРасчета = &ПремияЗаВыполненныеРаботы)) КАК
		|		ВКМ_ВыполненныеСотрудникомРаботыОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
		|		ПО ВКМ_ДополнительныеНачисления.Сотрудник = ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник
		|ГДЕ
		|	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
		|	И ВКМ_ДополнительныеНачисления.ВидРасчета = &ПремияЗаВыполненныеРаботы";
	
	Запрос.УстановитьПараметр("ПремияЗаВыполненныеРаботы", ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ПремияЗаВыполненныеРаботы);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Дата)); 
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = Движения.ВКМ_ДополнительныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1]; 
		Движение.Результат = ВыборкаДетальныеЗаписи.СуммаКОплатеОборот;
		
		// Удержание налога
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.Налог;
		Движение.ПериодРегистрации = Дата;
		Движение.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		Движение.Результат = ВыборкаДетальныеЗаписи.СуммаКОплатеОборот * 0.13;
	КонецЦикла;
	
	Движения.ВКМ_ДополнительныеНачисления.Записать(, Истина);
	Движения.ВКМ_Удержания.Записать();

КонецПроцедуры

Процедура ЗаписьВРегистрВзаиморасчетыССотрудниками() 
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.Сотрудник,
		|	СУММА(ВКМ_ОсновныеНачисления.Результат) КАК ОсновныеНачисления
		|ПОМЕСТИТЬ ВТ_ОсновныеНачисления
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОсновныеНачисления.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_ДополнительныеНачисления.Сотрудник,
		|	СУММА(ВКМ_ДополнительныеНачисления.Результат) КАК ДополнительныеНачисления
		|ПОМЕСТИТЬ ВТ_ДополнительныеНачисления
		|ИЗ
		|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
		|ГДЕ
		|	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ДополнительныеНачисления.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_Удержания.Сотрудник,
		|	СУММА(ВКМ_Удержания.Результат) КАК Налог
		|ПОМЕСТИТЬ ВТ_Налог
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|ГДЕ
		|	ВКМ_Удержания.Регистратор = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_Удержания.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ОсновныеНачисления.Сотрудник,
		|	ЕСТЬNULL(ВТ_ОсновныеНачисления.ОсновныеНачисления, 0) КАК ОсновныеНачисления,
		|	ЕСТЬNULL(ВТ_ДополнительныеНачисления.ДополнительныеНачисления, 0) КАК ДополнительныеНачисления,
		|	ЕСТЬNULL(ВТ_Налог.Налог, 0) КАК Налог
		|ИЗ
		|	ВТ_ОсновныеНачисления КАК ВТ_ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДополнительныеНачисления КАК ВТ_ДополнительныеНачисления
		|		ПО ВТ_ОсновныеНачисления.Сотрудник = ВТ_ДополнительныеНачисления.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Налог КАК ВТ_Налог
		|		ПО ВТ_ОсновныеНачисления.Сотрудник = ВТ_Налог.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		Движение.Сумма = ВыборкаДетальныеЗаписи.ОсновныеНачисления + ВыборкаДетальныеЗаписи.ДополнительныеНачисления - ВыборкаДетальныеЗаписи.Налог;
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Регистратор = Ссылка;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецЕсли