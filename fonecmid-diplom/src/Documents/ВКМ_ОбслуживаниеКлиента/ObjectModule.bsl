#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)

	ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВидДоговора");
	ДатаНачалаДействияДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_ДатаНачалаДействияДоговора");
	ДатаОкончанияДействияДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор,
		"ВКМ_ДатаОкончанияДействияДоговора");

	Если ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
		ТекстСообщения = СтрШаблон("Выбранный договор не является договором обслуживания клиентов");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Если Дата < ДатаНачалаДействияДоговора Тогда
		ТекстСообщения = СтрШаблон("Срок действия выбранного договора еще не начался");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Если Дата > ДатаОкончанияДействияДоговора Тогда
		ТекстСообщения = СтрШаблон("Срок действия выбранного договора истек");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот
	|ИЗ
	|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата, Сотрудник = &Сотрудник) КАК
	|		ВКМ_УсловияОплатыСотрудниковСрезПоследних";

	Запрос.УстановитьПараметр("Сотрудник", Специалист);
	Запрос.УстановитьПараметр("Дата", Дата);

	Выборка = Запрос.Выполнить().Выбрать();

	Если Не Выборка.Следующий() Тогда
		ТекстСообщения = СтрШаблон("Сотруднику %1 не установлен процент оплаты от работ", Специалист);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Выборка.Следующий();
	ПроцентОтРабот = Выборка.ПроцентОтРабот;

	СтавкаЧаса = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_СтоимостьЧасаРаботы");

	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;

	Для Каждого ТекСтрокаВыполненныеРаботы Из ВыполненныеРаботы Цикл
		
		// регистр ВКМ_ВыполненныеКлиентуРаботы
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Клиент = Клиент;
		Движение.Договор = Договор;
		Движение.КоличествоЧасов = ТекСтрокаВыполненныеРаботы.ЧасыКОплатеКлиенту;
		Движение.СуммаКОплате = ТекСтрокаВыполненныеРаботы.ЧасыКОплатеКлиенту * СтавкаЧаса;
		
		// регистр ВКМ_ВыполненныеСотрудникомРаботы		
		Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
		Движение.Период = Дата;
		Движение.Сотрудник = Специалист;
		Движение.ЧасовКОплате = ТекСтрокаВыполненныеРаботы.ЧасыКОплатеКлиенту;
		Движение.СуммаКОплате = ?(ПроцентОтРабот > 0, ТекСтрокаВыполненныеРаботы.ЧасыКОплатеКлиенту * СтавкаЧаса
			* ПроцентОтРабот / 100, 0);

	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецЕсли